<Activity mc:Ignorable="sap sap2010" x:Class="PDF_ExtractTable" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1940,6185" sap2010:WorkflowViewState.IdRef="PDF_ExtractTable_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="37">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="PDF_ExtractTable" sap:VirtualizedContainerService.HintSize="1950,6120" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="GetText" />
      <Variable x:TypeArguments="x:String" Name="text1" />
      <Variable x:TypeArguments="x:String" Name="text2" />
      <Variable x:TypeArguments="x:String" Name="finalText" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="lstAllLines" />
      <Variable x:TypeArguments="x:Int32" Name="indexLines" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtOutput" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtMasterName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtMasterName]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="1908,97" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="PDF\NeezamMasterNames.xlsx" />
    <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="E:\UiPath Training Material\Usecases\Usecase_Process\PDF\Neezam PDF" sap:VirtualizedContainerService.HintSize="1908,5893" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
      <ui:ForEachFileX.Body>
        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
          <ActivityAction.Argument1>
            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
          </ActivityAction.Argument1>
          <ActivityAction.Argument2>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
          </ActivityAction.Argument2>
          <Sequence sap:VirtualizedContainerService.HintSize="1874,5634" sap2010:WorkflowViewState.IdRef="Sequence_32">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1832,5544" sap2010:WorkflowViewState.IdRef="Sequence_31">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="FileName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[CurrentFile.FullName]" sap:VirtualizedContainerService.HintSize="1770,69" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[GetText]" />
              <Assign sap:VirtualizedContainerService.HintSize="1770,70" sap2010:WorkflowViewState.IdRef="Assign_57">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[FileName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[CurrentFile.Name.Substring(0,CurrentFile.Name.LastIndexOf("."))]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign GetText" sap:VirtualizedContainerService.HintSize="1770,70" sap2010:WorkflowViewState.IdRef="Assign_66">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[GetText]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(GetText,"(?=Date Timekeeper)[\S\s]*(?=Fee Total)").Value]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign GetText" sap:VirtualizedContainerService.HintSize="1770,70" sap2010:WorkflowViewState.IdRef="Assign_67">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[GetText]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(GetText,"(?=Taxpayer Identification Number)[\S\s]*(?&lt;=202\d)","")]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign finalText" sap:VirtualizedContainerService.HintSize="1770,70" sap2010:WorkflowViewState.IdRef="Assign_43">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[text1]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[GetText.Replace("Date Timekeeper Narrative Hours Value","").Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign finalText" sap:VirtualizedContainerService.HintSize="1770,70" sap2010:WorkflowViewState.IdRef="Assign_62">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[finalText]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[text1]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1770,342" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,254" sap2010:WorkflowViewState.IdRef="Sequence_41">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text 'editable text'" sap:VirtualizedContainerService.HintSize="358,164" sap2010:WorkflowViewState.IdRef="SetValue_13" Text="[finalText]">
                      <ui:SetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ea6233bc-11e5-4983-94f0-57b31401ab53" InformativeScreenshot="808a5fc44339d23dc0f6ac6066ed62c8" Selector="&lt;wnd app='notepad.exe' cls='Notepad' title='*Notepad' /&gt;&lt;wnd cls='Edit' /&gt;&lt;ctrl name='Text Editor' role='editable text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SetValue.Target>
                    </ui:SetValue>
                  </Sequence>
                </ui:CommentOut.Body>
              </ui:CommentOut>
              <Assign DisplayName="Assign initi List" sap:VirtualizedContainerService.HintSize="1770,70" sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[lstAllLines]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign initi List" sap:VirtualizedContainerService.HintSize="1770,70" sap2010:WorkflowViewState.IdRef="Assign_58">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[indexLines]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - On Each Line" sap:VirtualizedContainerService.HintSize="1770,3895" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[finalText.Split(New String() {Environment.NewLine},StringSplitOptions.RemoveEmptyEntries)]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1734,3762" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="strtmp" />
                        <Variable x:TypeArguments="x:Int32" Name="idx" />
                        <Variable x:TypeArguments="x:Int32" Name="indexWord" />
                        <Variable x:TypeArguments="s:String[]" Name="arraySplit" />
                        <Variable x:TypeArguments="x:Boolean" Name="IsDateFormatInString" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1692,101" sap2010:WorkflowViewState.IdRef="LogMessage_6" Message="[&quot;Before string manipulation &quot; + item]" />
                      <Assign DisplayName="Assign - Date Format dd/MM/yy" sap:VirtualizedContainerService.HintSize="1692,70" sap2010:WorkflowViewState.IdRef="Assign_20">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[IsDateFormatInString]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">[System.Text.RegularExpressions.Regex.IsMatch(item,"\d{2}\/\d{2}\/\d{2}")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[IsDateFormatInString]" DisplayName="If -Date format dd/MM/yy" sap:VirtualizedContainerService.HintSize="1692,3280" sap2010:WorkflowViewState.IdRef="If_2">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="682,2571" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign strtmp Trim" sap:VirtualizedContainerService.HintSize="640,70" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strtmp]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[item.ToString.Trim]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign - Index of First Space" sap:VirtualizedContainerService.HintSize="640,70" sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[strtmp.IndexOf(" "C)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign - Insert Pipeline on First Empty Space" sap:VirtualizedContainerService.HintSize="640,70" sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strtmp]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strtmp.Remove(idx,1).Insert(idx,"|")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign - Last Index Of Empty Space" sap:VirtualizedContainerService.HintSize="640,70" sap2010:WorkflowViewState.IdRef="Assign_12">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[strtmp.LastIndexOf(" "C)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign - Insert Pipeline on Last Empty Space" sap:VirtualizedContainerService.HintSize="640,70" sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strtmp]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strtmp.Remove(idx,1).Insert(idx,"|")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign - Last Index Of Space Before Hour" sap:VirtualizedContainerService.HintSize="640,70" sap2010:WorkflowViewState.IdRef="Assign_44">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[strtmp.LastIndexOf(" "C)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign - Index of Last Space" sap:VirtualizedContainerService.HintSize="640,70" sap2010:WorkflowViewState.IdRef="Assign_45">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strtmp]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strtmp.Remove(idx,1).Insert(idx,"|")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign Split on the basis of Empty Spaces" sap:VirtualizedContainerService.HintSize="640,70" sap2010:WorkflowViewState.IdRef="Assign_15">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:String[]">[arraySplit]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:String[]">[strtmp.Split(" "C)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[indexWord]" DisplayName="For Each - Get Each word" sap:VirtualizedContainerService.HintSize="640,1419" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[arraySplit]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="word" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="604,1286" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If sap2010:Annotation.AnnotationText="Example: Research piercing corporate veil doctrine (Here first char of pierching is small)&#xD;&#xA;Example: Discuss ASI functions (Here ASI have first two char capital)" Condition="[Char.IsLower(word.Chars(0)) or (Char.IsUpper(word.Chars(0)) and Char.IsUpper(word.Chars(1)))]" DisplayName="If - First char of word is lower or  First &amp; Second char of word is Upper" sap:VirtualizedContainerService.HintSize="562,1196" sap2010:WorkflowViewState.IdRef="If_1">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="526,958" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="previousWord" />
                                            <Variable x:TypeArguments="x:Int32" Name="idxBracket" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Assign Get previous word which starts with Captial letter" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_14">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[previousWord]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[arraySplit.ElementAt(indexWord-1)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - Index of Previous Word" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_16">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[strtmp.IndexOf(previousWord)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - Index of Bracket" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_65">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[idxBracket]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[strtmp.IndexOf("[")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <If Condition="[idxBracket &lt; idx and idxBracket &gt; -1]" sap:VirtualizedContainerService.HintSize="484,356" sap2010:WorkflowViewState.IdRef="If_13">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="400,160" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Assign - Ass" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_64">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[idxBracket]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <Assign DisplayName="Assign - Insert Pipeline on start of Description" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_18">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strtmp]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[strtmp.Remove(idx-1,1).Insert(idx-1,"|")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:Break sap:VirtualizedContainerService.HintSize="484,32" sap2010:WorkflowViewState.IdRef="Break_1" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEach>
                            <AddToCollection x:TypeArguments="x:String" Collection="[lstAllLines]" DisplayName="Add To Collection - List" sap:VirtualizedContainerService.HintSize="640,32" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[strtmp]" />
                            <Assign sap:VirtualizedContainerService.HintSize="562,70" sap2010:WorkflowViewState.IdRef="Assign_23">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[indexLines]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[indexLines + 1]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="965,3113" sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="s:String[]" Name="splitItemText" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap2010:Annotation.AnnotationText="Here bot retrieve text which doesn't start with date.&#xD;&#xA;Split that text" DisplayName="Assign - Split string on space" sap:VirtualizedContainerService.HintSize="923,127" sap2010:WorkflowViewState.IdRef="Assign_38">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:String[]">[splitItemText]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:String[]">[item.Split(" "C)]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <If Condition="[Char.IsUpper(item.Chars(0)) and indexLines &gt;0]" DisplayName="If - First word Char is upper in remaining description" sap:VirtualizedContainerService.HintSize="923,2020" sap2010:WorkflowViewState.IdRef="If_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="887,1824" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataTable" Name="dtFilteredData" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign - Get previous line from List" sap:VirtualizedContainerService.HintSize="845,70" sap2010:WorkflowViewState.IdRef="Assign_33">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strtmp]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[lstAllLines.ElementAt(indexLines-1)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign - First Index of Pipeline" sap:VirtualizedContainerService.HintSize="845,70" sap2010:WorkflowViewState.IdRef="Assign_34">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[strtmp.IndexOf("|")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign - Second index of pipeline" sap:VirtualizedContainerService.HintSize="845,70" sap2010:WorkflowViewState.IdRef="Assign_35">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[strtmp.IndexOf("|", idx + 2)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:FilterDataTable DataTable="[dtMasterName]" DisplayName="Filter Data Table - On Master file consist Names " FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="845,170" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dtFilteredData]" SelectColumnsMode="Keep">
                                    <ui:FilterDataTable.Filters>
                                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                        <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                          <ui:FilterOperationArgument.Column>
                                            <InArgument x:TypeArguments="x:String">["Name"]</InArgument>
                                          </ui:FilterOperationArgument.Column>
                                          <ui:FilterOperationArgument.Operand>
                                            <InArgument x:TypeArguments="x:String">[splitItemText(0).ToString]</InArgument>
                                          </ui:FilterOperationArgument.Operand>
                                        </ui:FilterOperationArgument>
                                      </scg:List>
                                    </ui:FilterDataTable.Filters>
                                    <ui:FilterDataTable.SelectColumns>
                                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                                        <x:Null />
                                      </scg:List>
                                    </ui:FilterDataTable.SelectColumns>
                                  </ui:FilterDataTable>
                                  <If Condition="[dtFilteredData.RowCount &gt; 0]" DisplayName="If - Name present in Master File" sap:VirtualizedContainerService.HintSize="845,466" sap2010:WorkflowViewState.IdRef="If_10">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,270" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign - Insert first word near to name pipeline" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_36">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strtmp]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strtmp.Remove(idx,1).Insert(idx, " " + splitItemText(0)+ "|")]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign update list" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_37">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[lstAllLines(indexLines - 1)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strtmp]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <Assign DisplayName="Assign - Last index of pipeline" sap:VirtualizedContainerService.HintSize="845,70" sap2010:WorkflowViewState.IdRef="Assign_55">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[strtmp.LastIndexOf("|")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign Subtract -5 to get second last pipeline" sap:VirtualizedContainerService.HintSize="845,70" sap2010:WorkflowViewState.IdRef="Assign_56">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[idx - 5]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[splitItemText.Count &gt;1 and dtFilteredData.RowCount = 0]" DisplayName="If - Split Text count is greater than 1 and Name doesn't exist in Master file" sap:VirtualizedContainerService.HintSize="845,468" sap2010:WorkflowViewState.IdRef="If_8">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,301" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap2010:Annotation.AnnotationText="Skipping first word as it might be name" DisplayName="Assign - Insert text near description pipeline and skip first word" sap:VirtualizedContainerService.HintSize="358,101" sap2010:WorkflowViewState.IdRef="Assign_40">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strtmp]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strtmp.Remove(idx,1).Insert(idx, " " + String.Join(" ",splitItemText.Skip(1))+ "|")]</InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                        <Assign DisplayName="Assign update list" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_41">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[lstAllLines(indexLines - 1)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strtmp]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,270" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign Insert pipeline near description" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_53">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strtmp]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strtmp.Remove(idx,1).Insert(idx, " " + String.Join(" ",splitItemText)+ "|")]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign update list" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_54">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[lstAllLines(indexLines - 1)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strtmp]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                            <If Condition="[Char.IsLower(item.Chars(0)) and indexLines &gt;0]" DisplayName="If - Char Start With Lower Text " sap:VirtualizedContainerService.HintSize="923,796" sap2010:WorkflowViewState.IdRef="If_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,600" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign - Get Previous Line Text" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_22">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strtmp]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[lstAllLines.ElementAt(indexLines-1)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign - Last index of pipeline" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_24">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[strtmp.LastIndexOf("|")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign Subtract -5 to get second last pipeline" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_49">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[idx - 5]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign insert text near description pipeline" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_25">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strtmp]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[strtmp.Remove(idx,1).Insert(idx, " " + item+ "|")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign update list" sap:VirtualizedContainerService.HintSize="358,70" sap2010:WorkflowViewState.IdRef="Assign_26">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[lstAllLines(indexLines - 1)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[strtmp]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1614,101" sap2010:WorkflowViewState.IdRef="LogMessage_7" Message="[&quot;After string manipulation&quot; +strtmp]" />
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
              <ui:GenerateDataTable ColumnSizes="{x:Null}" NewLineSeparator="{x:Null}" Positions="{x:Null}" CSVParsing="True" ColumnSeparators="|" DataTable="[dtOutput]" DisplayName="Generate Data Table" sap:VirtualizedContainerService.HintSize="1692,61" sap2010:WorkflowViewState.IdRef="GenerateDataTable_1" Input="[String.Join(Environment.NewLine,lstAllLines)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:GenerateDataTable>
              <ui:WriteRange StartingCell="{x:Null}" AddHeaders="False" DataTable="[dtOutput]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="1692,125" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="[&quot;PDF\Neezam PDF Extract\&quot;+FileName+&quot;.xlsx&quot;]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:WriteRange>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEachFileX.Body>
    </ui:ForEachFileX>
  </Sequence>
</Activity>